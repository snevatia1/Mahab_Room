name: Android APK (Flutter)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Detect whether this repo actually has a Flutter project
      - name: Detect Flutter project
        id: detect
        shell: bash
        run: |
          if [[ -f "pubspec.yaml" ]]; then
            echo "build=true" >> "$GITHUB_OUTPUT"
          else
            echo "build=false" >> "$GITHUB_OUTPUT"
          fi

      # Short-circuit if no Flutter project (keeps the workflow green)
      - name: No Flutter project found â€” skipping build
        if: steps.detect.outputs.build == 'false'
        run: |
          echo "No pubspec.yaml in repo. This workflow is for Flutter/Android builds."
          echo "Skipping without error."

      - name: Set up Java 17
        if: steps.detect.outputs.build == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Install Android SDK (cmdline-tools)
        if: steps.detect.outputs.build == 'true'
        uses: android-actions/setup-android@v3
        with:
          packages: |
            platform-tools
            platforms;android-34
            build-tools;34.0.0
            cmdline-tools;latest

      - name: Accept SDK licenses
        if: steps.detect.outputs.build == 'true'
        shell: bash
        run: |
          SDKROOT="${ANDROID_SDK_ROOT:-$ANDROID_HOME}"
          yes | "${SDKROOT}/cmdline-tools/latest/bin/sdkmanager" --licenses

      - name: Set up Flutter (stable)
        if: steps.detect.outputs.build == 'true'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "stable"
          channel: "stable"
          cache: true

      - name: Flutter pub get
        if: steps.detect.outputs.build == 'true'
        run: flutter pub get

      - name: Enable Android (no-op if already)
        if: steps.detect.outputs.build == 'true'
        run: flutter config --enable-android

      - name: Build APK (release)
        if: steps.detect.outputs.build == 'true'
        run: flutter build apk --release

      - name: Upload APK artifact
        if: steps.detect.outputs.build == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: app-release-apk
          path: build/app/outputs/flutter-apk/app-release.apk

